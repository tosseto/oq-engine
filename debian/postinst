#!/bin/sh
# postinst script for openquake
#
# see: dh_installdeb(1)

if [ $GEM_SET_DEBUG ]; then
    set -x
fi
set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# load debconf suite
. /usr/share/debconf/confmodule

GEM_DEB_PACKAGE="python-oq-engine"

LSB_RELEASE=$(lsb_release --codename --short)
if [ "$LSB_RELEASE" != "precise" -a "$LSB_RELEASE" != "trusty" -a "$LSB_RELEASE" != "xenial" ]; then
    db_input high python-oq-engine/distro_alert || true
    db_go
fi

ENGINE_USER=openquake

(if ! rabbitmqctl status &>/dev/null; then
    if ! rabbitmqctl list_users | grep $ENGINE_USER; then
        rabbitmqctl add_user $ENGINE_USER $ENGINE_USER
    fi
    if ! rabbitmqctl list_vhosts | grep $ENGINE_USER; then
        rabbitmqctl add_vhost $ENGINE_USER
        rabbitmqctl set_permissions -p $ENGINE_USER $ENGINE_USER ".*" ".*" ".*"
    fi
fi) >/dev/null || true # Do not hard fail if something went wrong

if ! getent group $ENGINE_USER >/dev/null; then
    addgroup --system $ENGINE_USER
fi
if  ! getent passwd $ENGINE_USER >/dev/null; then
    adduser --system --home /var/lib/$ENGINE_USER --group --shell /bin/bash $ENGINE_USER
fi

DIR=/var/lib/openquake
mkdir -p $DIR
chown -R $ENGINE_USER.$ENGINE_USER $DIR

DIR=/usr/share/openquake/engine
mkdir -p $DIR
chown -R $ENGINE_USER.$ENGINE_USER $DIR

DIR=/var/log/openquake
mkdir -p $DIR
chown -R $ENGINE_USER.adm $DIR

# delete obsolete .pyc files in /usr/share/openquake
find /usr/share/openquake -type f -name \*.pyc -exec rm -f {} \;

# setup supervisord
# - if supervisord is running:
#   - reload config and start the dbserver and the webui
# - if supervisord is NOT running:
#   - make sure it's started during boot
#   - start it

echo "Setup supervisord"

if pgrep supervisord 2>&1 > /dev/null; then
    supervisorctl reload
else
    if command -v systemctl 2>&1 > /dev/null; then
        systemctl enable supervisor.service
        systemctl start supervisor.service
    else
        update-rc.d supervisor defaults || true
        /etc/init.d/supervisor start
    fi
fi

#touch /tmp/mop-pause
#while [ 1 ]; do
#    if [ -f /tmp/mop-pause ]; then
#        sleep 1
#    fi
#done

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

db_stop
exit 0
